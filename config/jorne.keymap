/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviours {
        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            label = "REQUIRE_PRIOR_IDLE";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
        mtr: mod_tap_repeat {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp LWIN  &kp GRAVE  &kp Q  &kp W  &kp E         &kp R             &kp T          &kp Y        &kp U            &kp I         &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
          &kp LCTRL  &kp A  &kp S  &rpi LCTRL D  &rpi LALT F       &rpi LGUI G    &rpi RGUI H  &rpi RALT J      &rpi RCTRL K  &kp L    &kp SEMI  &mt RCTRL SQT
          &kp LALT   &kp Z  &kp X  &kp C         &kp V             &kp B          &kp N        &kp M            &kp COMMA     &kp DOT  &kp FSLH  &kp BSLH
                                   &lt 1 TAB     &mt LSHFT ESCAPE  &lt 2 SPACE    &lt 2 ENTER  &mtr RSHFT BSPC  &mo 1
            >;
        };

        layer_lower {
            bindings = <
&trans  &kp UNDER       &kp F1    &kp F2  &kp F3           &kp F4            &kp F5             &kp F6           &kp F7               &kp F8           &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &mt LCTRL PLUS  &kp EXCL  &kp AT  &rpi LCTRL HASH  &rpi LALT DOLLAR  &rpi LGUI PRCNT    &rpi RGUI CARET  &rpi RALT AMPERSAND  &rpi RCTRL STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &mt LALT EQUAL  &kp N1    &kp N2  &kp N3           &kp N4            &kp N5             &kp N6           &kp N7               &kp N8           &kp N9    &kp N0    &trans
                                          &trans           &trans            &lt 3 SPACE        &lt 3 ENTER      &trans               &trans
            >;
        };

        layer_raise {
            bindings = <
&trans  &kp KP_NUM       &kp KP_SLASH     &kp KP_N7  &kp KP_N8         &kp KP_N9        &kp KP_MINUS         &kp C_VOL_UP      &kp LG(UP)    &kp C_PLAY_PAUSE  &kp RG(DOWN)   &kp C_NEXT  &none   &trans
        &mt LCTRL EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &rpi LCTRL KP_N5  &rpi LALT KP_N6  &rpi LGUI KP_PLUS    &rpi RGUI C_MUTE  &kp LG(LEFT)  &kp UP            &kp RG(RIGHT)  &none       &none
        &trans           &kp KP_N0        &kp KP_N1  &kp KP_N2         &kp KP_N3        &kp KP_DOT           &kp C_VOL_DN      &kp LEFT      &kp DOWN          &kp RIGHT      &none       &trans
                                                     &to 3             &trans           &trans               &trans            &trans        &to 3
            >;
        };

        layer_adjust {
            bindings = <
&sys_reset  &bootloader  &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &bootloader  &sys_reset
            &bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
            &none        &none         &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                                     &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
